{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample REST API server.",
        "title": "User Subscription REST API Server",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/subscriptions": {
            "get": {
                "description": "Returns a list of a user's subscriptions by their UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of user subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.UserSubscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid UUID or missing parameter",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adding user subscription to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add user subscription",
                "parameters": [
                    {
                        "description": "Data for creating a user subscription",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserSubDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User subscription already exists",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/total_cost": {
            "get": {
                "description": "Returns the total cost of a user's subscriptions for the specified period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get total user subscription cost",
                "parameters": [
                    {
                        "description": "Request data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TotalCost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TotalCostResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{id}": {
            "get": {
                "description": "Returns information about a user's subscription by its ID",
                "summary": "Get user subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request data",
                        "schema": {
                            "$ref": "#/definitions/domain.UserSubscription"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User subscription not found",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a user's subscription data by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update user subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data for updating the subscription",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserSubDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.UserSubscription"
                        }
                    },
                    "400": {
                        "description": "Invalid ID or request body",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error updating subscription",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a user subscription by ID",
                "summary": "Delete user subscription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User ubscription not found",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/resp.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.UserSubscription": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserSubDTO": {
            "type": "object",
            "required": [
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "service_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.TotalCost": {
            "type": "object",
            "required": [
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateUserSubDTO": {
            "type": "object",
            "required": [
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer",
                    "minimum": 0
                },
                "service_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handler.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.TotalCostResponse": {
            "type": "object",
            "properties": {
                "total_cost": {
                    "type": "integer"
                }
            }
        },
        "resp.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}